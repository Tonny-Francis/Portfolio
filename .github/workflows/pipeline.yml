name: Deploy to Kubernetes

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
    # build:
    #     runs-on: ubuntu-latest

    #     environment: production

    #     steps:
    #         - name: Checkout code
    #           uses: actions/checkout@v2

    #         - name: Login to Docker Hub
    #           uses: docker/login-action@v3
    #           with:
    #             username: ${{ vars.DOCKER_HUB_USERNAME }}
    #             password: ${{ secrets.DOCKER_HUB_TOKEN }}

    #         - name: Setup Docker
    #           uses: docker/setup-buildx-action@v3

    #         - name: Build and Push
    #           uses: docker/build-push-action@v6
    #           with:
    #             context: .
    #             file: ./Dockerfile
    #             push: true
    #             tags: ${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.SERVICE_NAME }}:latest

    deploy:
        runs-on: ubuntu-latest
        # needs: 'build'
        environment: production

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Download OCI CLI
              run: curl -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh

            - name: Install OCI CLI
              run: bash install.sh --accept-all-defaults --install-dir ~/lib/oracle-cli

            - name: Generate Config OCI CLI
              run: echo ./scripts/create_oci_config.sh
              env:
                OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
                OCI_LINK_PRIVATE_KEY: ${{ secrets.OCI_LINK_PRIVATE_KEY }}
                OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
                OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
                OCI_CLI_REGION: ${{ vars.OCI_CLI_REGION }}

            - name: Test OCI CLI
              run: oci os ns get

            - name: Setup Kubectl
              uses: actions-hub/kubectl@master
              env:
                KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
              with:
                args: 'get pods'